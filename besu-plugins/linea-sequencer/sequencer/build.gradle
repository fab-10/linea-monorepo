/*
 * Copyright Consensys Software Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
 * an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 */

plugins {
  alias(libs.plugins.besuPluginDistribution)
  alias(libs.plugins.lombok)
  alias(libs.plugins.gradleVersions)
}

group = 'net.consensys.linea.besu.plugin'

def lineaSequencerProject = project(lineaSequencerProjectPath)
apply from: lineaSequencerProject.file("gradle/java.gradle")
apply from: lineaSequencerProject.file("gradle/dependency-management.gradle")
apply from: lineaSequencerProject.file("gradle/lint.gradle")

dependencies {
  implementation "net.consensys.linea.zktracer:arithmetization:${libs.versions.arithmetization.get()}"
  implementation "build.linea:blob-compressor:${libs.versions.blobCompressor.get()}"
  implementation "build.linea.internal:kotlin:${libs.versions.lineaKotlin.get()}"

  testImplementation 'org.awaitility:awaitility'

  testImplementation 'org.assertj:assertj-core'

  testImplementation 'org.junit.jupiter:junit-jupiter-api'
  testImplementation 'org.junit.jupiter:junit-jupiter-params'

  testImplementation 'org.mockito:mockito-core'
  testImplementation 'org.mockito:mockito-junit-jupiter'

  testImplementation "org.wiremock:wiremock:${libs.versions.wiremock.get()}"
}

apply from: lineaSequencerProject.file("gradle/dist.gradle")

test {
  useJUnitPlatform()
  // Disable parallel execution for this module due to WireMock test interference
  systemProperty "junit.jupiter.execution.parallel.enabled", "false"
}
